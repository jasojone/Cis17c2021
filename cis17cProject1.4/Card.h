/* 
 * File:   Card.h
 * Author: Jason
 *
 * Created on April 14, 2021, 8:25 AM
 */
 /*****************************************************************************\
 * Card.h                                                                      *
 * This header file will contain the attributes of the card.                   *
 * Attributes: the cards suit, the power of the card and the cards ascii art.  *
 \*****************************************************************************/
#ifndef CARD_H
#define CARD_H

#include <iostream>
#include <map>

using namespace std;
//why a struct?
struct Card
{
    string suit;    // cards suit 
    int cPower;     // power of the card to determine who will win the round
    //constructer?
    Card(string s, int p)
    {
        suit = s;
        cPower = p;
    }
    //cardArt is the map with a nested map that contains cars ascii visual art
    map<string, map<int, string>> cardArt =
    {
        
        {"CLUBS",
        {
            {2, ".------.\n|2.--. |\n| :(): |\n| ()() |\n| '--'2|\n`------'\n"},
            {3, ".------.\n|3.--. |\n| :(): |\n| ()() |\n| '--'3|\n`------'\n"},
            {4, ".------.\n|4.--. |\n| :(): |\n| ()() |\n| '--'4|\n`------'\n"},
            {5, ".------.\n|5.--. |\n| :(): |\n| ()() |\n| '--'5|\n`------'\n"},
            {6, ".------.\n|6.--. |\n| :(): |\n| ()() |\n| '--'6|\n`------'\n"},
            {7, ".------.\n|7.--. |\n| :(): |\n| ()() |\n| '--'7|\n`------'\n"},
            {8, ".------.\n|8.--. |\n| :(): |\n| ()() |\n| '--'8|\n`------'\n"},
            {9, ".------.\n|9.--. |\n| :(): |\n| ()() |\n| '--'9|\n`------'\n"},
            {10, ".------.\n|10--. |\n| :(): |\n| ()() |\n| '--10|\n`------'\n"},
            {11, ".------.\n|J.--. |\n| :(): |\n| ()() |\n| '--'J|\n`------'\n"},
            {12, ".------.\n|Q.--. |\n| :(): |\n| ()() |\n| '--'Q|\n`------'\n"},
            {13, ".------.\n|K.--. |\n| :(): |\n| ()() |\n| '--'K|\n`------'\n"},
            {14, ".------.\n|A.--. |\n| :(): |\n| ()() |\n| '--'A|\n`------'\n"}
        }
    },
    {"DIAMONDS", 
        {
            {2, ".------.\n|2.--. |\n| :/\\: |\n| :\\/: |\n| '--'2|\n`------'\n"},
            {3, ".------.\n|3.--. |\n| :/\\: |\n| :\\/: |\n| '--'3|\n`------'\n"},
            {4, ".------.\n|4.--. |\n| :/\\: |\n| :\\/: |\n| '--'4|\n`------'\n"},
            {5, ".------.\n|5.--. |\n| :/\\: |\n| :\\/: |\n| '--'5|\n`------'\n"},
            {6, ".------.\n|6.--. |\n| :/\\: |\n| :\\/: |\n| '--'6|\n`------'\n"},
            {7, ".------.\n|7.--. |\n| :/\\: |\n| :\\/: |\n| '--'7|\n`------'\n"},
            {8, ".------.\n|8.--. |\n| :/\\: |\n| :\\/: |\n| '--'8|\n`------'\n"},
            {9, ".------.\n|9.--. |\n| :/\\: |\n| :\\/: |\n| '--'9|\n`------'\n"},
            {10, ".------.\n|10--. |\n| :/\\: |\n| :\\/: |\n| '--10|\n`------'\n"},
            {11, ".------.\n|J.--. |\n| :/\\: |\n| :\\/: |\n| '--'J|\n`------'\n"},
            {12, ".------.\n|Q.--. |\n| :/\\: |\n| :\\/: |\n| '--'Q|\n`------'\n"},
            {13, ".------.\n|K.--. |\n| :/\\: |\n| :\\/: |\n| '--'K|\n`------'\n"},
            {14, ".------.\n|A.--. |\n| :/\\: |\n| :\\/: |\n| '--'A|\n`------'\n"}
        }
    },
    {"DIAMONDS", 
        {
            {2, ".------.\n|2.--. |\n| :/\\: |\n| :\\/: |\n| '--'2|\n`------'\n"},
            {3, ".------.\n|3.--. |\n| :/\\: |\n| :\\/: |\n| '--'3|\n`------'\n"},
            {4, ".------.\n|4.--. |\n| :/\\: |\n| :\\/: |\n| '--'4|\n`------'\n"},
            {5, ".------.\n|5.--. |\n| :/\\: |\n| :\\/: |\n| '--'5|\n`------'\n"},
            {6, ".------.\n|6.--. |\n| :/\\: |\n| :\\/: |\n| '--'6|\n`------'\n"},
            {7, ".------.\n|7.--. |\n| :/\\: |\n| :\\/: |\n| '--'7|\n`------'\n"},
            {8, ".------.\n|8.--. |\n| :/\\: |\n| :\\/: |\n| '--'8|\n`------'\n"},
            {9, ".------.\n|9.--. |\n| :/\\: |\n| :\\/: |\n| '--'9|\n`------'\n"},
            {10, ".------.\n|10--. |\n| :/\\: |\n| :\\/: |\n| '--10|\n`------'\n"},
            {11, ".------.\n|J.--. |\n| :/\\: |\n| :\\/: |\n| '--'J|\n`------'\n"},
            {12, ".------.\n|Q.--. |\n| :/\\: |\n| :\\/: |\n| '--'Q|\n`------'\n"},
            {13, ".------.\n|K.--. |\n| :/\\: |\n| :\\/: |\n| '--'K|\n`------'\n"},
            {14, ".------.\n|A.--. |\n| :/\\: |\n| :\\/: |\n| '--'A|\n`------'\n"}
        }
    },
    {"HEARTS", 
        {
            {2, ".------.\n|2.--. |\n| (\\/) |\n| :\\/: |\n| '--'2|\n`------'\n"},
            {3, ".------.\n|3.--. |\n| (\\/) |\n| :\\/: |\n| '--'3|\n`------'\n"},
            {4, ".------.\n|4.--. |\n| (\\/) |\n| :\\/: |\n| '--'4|\n`------'\n"},
            {5, ".------.\n|5.--. |\n| (\\/) |\n| :\\/: |\n| '--'5|\n`------'\n"},
            {6, ".------.\n|6.--. |\n| (\\/) |\n| :\\/: |\n| '--'6|\n`------'\n"},
            {7, ".------.\n|7.--. |\n| (\\/) |\n| :\\/: |\n| '--'7|\n`------'\n"},
            {8, ".------.\n|8.--. |\n| (\\/) |\n| :\\/: |\n| '--'8|\n`------'\n"},
            {9, ".------.\n|9.--. |\n| (\\/) |\n| :\\/: |\n| '--'9|\n`------'\n"},
            {10, ".------.\n|10--. |\n| (\\/) |\n| :\\/: |\n| '--10|\n`------'\n"},
            {11, ".------.\n|J.--. |\n| (\\/) |\n| :\\/: |\n| '--'J|\n`------'\n"},
            {12, ".------.\n|Q.--. |\n| (\\/) |\n| :\\/: |\n| '--'Q|\n`------'\n"},
            {13, ".------.\n|K.--. |\n| (\\/) |\n| :\\/: |\n| '--'K|\n`------'\n"},
            {14, ".------.\n|A.--. |\n| (\\/) |\n| :\\/: |\n| '--'A|\n`------'\n"}
        }
    }
    };
//    void test()
//    {
//        //cardArt.insert(make_pair("CLUBS", make_pair(2, "342")));
//        cardArt.insert(make_pair("CLUBS", map<int, string>()));
//        cardArt["CLUBS"].insert(make_pair(2, "test"));
//
//        //map<string, map<int, string>>::iterator itr = cardArt.begin(); itr != cardArt.end(); itr++
//        for(auto &itr: cardArt)
//        {
//            cout << "Suit: " << itr.first << endl;
//
//            for (auto& innerITR: itr.second)
//            {
//                cout << "Power: " << innerITR.first << endl;
//                cout << "Art:" << endl;
//                cout << innerITR.second << endl;
//            }
//        }
//    }
};

#endif /* CARD_H */

